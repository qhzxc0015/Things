

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;

import org.elasticsearch.action.bulk.BackoffPolicy;
import org.elasticsearch.action.bulk.BulkProcessor;
import org.elasticsearch.action.bulk.BulkRequest;
import org.elasticsearch.action.bulk.BulkRequestBuilder;
import org.elasticsearch.action.bulk.BulkResponse;
import org.elasticsearch.action.bulk.BulkProcessor.Listener;
import org.elasticsearch.client.Client;
import org.elasticsearch.cluster.node.DiscoveryNode;
import org.elasticsearch.common.unit.ByteSizeUnit;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.unit.TimeValue;
//生成模拟数据并构建索引 UTF-8
public class genData {
	public static void main(String[] args) throws IOException {
		//num表示需要构建索引的条数,commit为多少条bulk构建一次单位为1000
		int sum=20000,commit=5;
        initCity("src/addr.txt");                
        //建立es连接
        Client client = new ClientFactory().getClient();
        Create_index(client,sum,commit);          
}	

/**
 * 构建索引
curl -XPOST "http://202.193.74.70:9200/person2/info/1" -d'
{
  "name": "啊1",
  "sex": "啊1",
  "email": "啊1",
  "school": "a",
  "Tel": "1啊"
}'
 * 检索数据
curl -XGET "http://202.193.74.70:9200/person2/info/_search" -d'
{
  "size": 100,
  "query": {
  "match_phrase": {
  "school": "大学"
  }
  }
}'
**/
	//构建索引
	private static void Create_index(Client client,int unm,int commit) {
		long begin= System.currentTimeMillis();
		int count = 1;
		//声明批量bulk,按次数提交
	    BulkRequestBuilder bulk = client.prepareBulk();
	    for (int i = 1; i <= (1*unm); i++) {
	    	//bulk添加到person2，这就需要首先存在具有json所有数据的person2先插入
	            bulk.add(client.prepareIndex("person2", "info").setSource(new genData().getJson()));
	            if (i % (commit*1000) == 0) {
	            	//bulk执行提交
	                    bulk.execute().actionGet();
	                    System.gc();
	                    //计时
	                    System.out.println("提交:" + count/10000+"万; "+count/10000/1000+"亿");
	                    long end1= System.currentTimeMillis();
	                    System.out.println("耗时:"+new genData().getTime(begin, end1)+"\n");
	            }
	            count++;
	    }
	    /**
	    // 创建BulkPorcessor对象
	    BulkProcessor bulkProcessor = BulkProcessor.builder(client, new Listener() {
	        public void beforeBulk(long paramLong, BulkRequest paramBulkRequest) {
	            // TODO Auto-generated method stub
	        }
	        
	        // 执行出错时执行
	        public void afterBulk(long paramLong, BulkRequest paramBulkRequest, Throwable paramThrowable) {
	            // TODO Auto-generated method stub
	        }
	        
	        public void afterBulk(long paramLong, BulkRequest paramBulkRequest, BulkResponse paramBulkResponse) {
	            // TODO Auto-generated method stub
	        }
	    })        
	    // 1w次请求执行一次bulk
	    .setBulkActions(10000)
	    // 1gb的数据刷新一次bulk
	    .setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB))
	    // 固定5s必须刷新一次
	    .setFlushInterval(TimeValue.timeValueSeconds(5))
	    // 并发请求数量, 0不并发, 1并发允许执行
	    .setConcurrentRequests(1)
	    // 设置退避, 100ms后执行, 最大请求3次
	    .setBackoffPolicy(
	            BackoffPolicy.exponentialBackoff(TimeValue.timeValueMillis(100), 3))
	    .build();
	    **/
	    //计时    
	    long end= System.currentTimeMillis();
	    System.out.println("耗时:"+new genData().getTime(begin, end));
	    System.out.println("finshed");
		}
	

	
	
	//生成数据并封装成json
	public static String base = "abcdefghijklmnopqrstuvwxyz0123456789";
	private static String firstName = "赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季麻强贾路娄危江童颜郭梅盛林刁钟徐邱骆高夏蔡田樊胡凌霍虞万支柯咎管卢莫经房裘缪干解应宗宣丁贲邓郁单杭洪包诸左石崔吉钮龚程嵇邢滑裴陆荣翁荀羊於惠甄魏加封芮羿储靳汲邴糜松井段富巫乌焦巴弓牧隗山谷车侯宓蓬全郗班仰秋仲伊宫宁仇栾暴甘钭厉戎祖武符刘姜詹束龙叶幸司韶郜黎蓟薄印宿白怀蒲台从鄂索咸籍赖卓蔺屠蒙池乔阴郁胥能苍双闻莘党翟谭贡劳逄姬申扶堵冉宰郦雍却璩桑桂濮牛寿通边扈燕冀郏浦尚农温别庄晏柴瞿阎充慕连茹习宦艾鱼容向古易慎戈廖庚终暨居衡步都耿满弘匡国文寇广禄阙东殴殳沃利蔚越夔隆师巩厍聂晁勾敖融冷訾辛阚那简饶空曾毋沙乜养鞠须丰巢关蒯相查后江红游竺权逯盖益桓公万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于仲孙太叔申屠公孙乐正轩辕令狐钟离闾丘长孙慕容鲜于宇文司徒司空亓官司寇仉督子车颛孙端木巫马公西漆雕乐正壤驷公良拓拔夹谷宰父谷粱晋楚阎法汝鄢涂钦段干百里东郭南门呼延归海羊舌微生岳帅缑亢况后有琴梁丘左丘东门西门商牟佘佴伯赏南宫墨哈谯笪年爱阳佟第五言福百家姓续";
	private static String girl = "秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 ";
	private static String boy = "伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘";
	private static String[] road = "重庆大厦,黑龙江路,十梅庵街,遵义路,湘潭街,瑞金广场,仙山街,仙山东路,仙山西大厦,白沙河路,赵红广场,机场路,民航街,长城南路,流亭立交桥,虹桥广场,长城大厦,礼阳路,风岗街,中川路,白塔广场,兴阳路,文阳街,绣城路,河城大厦,锦城广场,崇阳街,华城路,康城街,正阳路,和阳广场,中城路,江城大厦,顺城路,安城街,山城广场,春城街,国城路,泰城街,德阳路,明阳大厦,春阳路,艳阳街,秋阳路,硕阳街,青威高速,瑞阳街,丰海路,双元大厦,惜福镇街道,夏庄街道,古庙工业园,中山街,太平路,广西街,潍县广场,博山大厦,湖南路,济宁街,芝罘路,易州广场,荷泽四路,荷泽二街,荷泽一路,荷泽三大厦,观海二广场,广西支街,观海一路,济宁支街,莒县路,平度广场,明水路,蒙阴大厦,青岛路,湖北街,江宁广场,郯城街,天津路,保定街,安徽路,河北大厦,黄岛路,北京街,莘县路,济南街,宁阳广场,日照街,德县路,新泰大厦,荷泽路,山西广场,沂水路,肥城街,兰山路,四方街,平原广场,泗水大厦,浙江路,曲阜街,寿康路,河南广场,泰安路,大沽街,红山峡支路,西陵峡一大厦,台西纬一广场,台西纬四街,台西纬二路,西陵峡二街,西陵峡三路,台西纬三广场,台西纬五路,明月峡大厦,青铜峡路,台西二街,观音峡广场,瞿塘峡街,团岛二路,团岛一街,台西三路,台西一大厦,郓城南路,团岛三街,刘家峡路,西藏二街,西藏一广场,台西四街,三门峡路,城武支大厦,红山峡路,郓城北广场,龙羊峡路,西陵峡街,台西五路,团岛四街,石村广场,巫峡大厦,四川路,寿张街,嘉祥路,南村广场,范县路,西康街,云南路,巨野大厦,西江广场,鱼台街,单县路,定陶街,滕县路,钜野广场,观城路,汶上大厦,朝城路,滋阳街,邹县广场,濮县街,磁山路,汶水街,西藏路,城武大厦,团岛路,南阳街,广州路,东平街,枣庄广场,贵州街,费县路,南海大厦,登州路,文登广场,信号山支路,延安一街,信号山路,兴安支街,福山支广场,红岛支大厦,莱芜二路,吴县一街,金口三路,金口一广场,伏龙山路,鱼山支街,观象二路,吴县二大厦,莱芜一广场,金口二街,海阳路,龙口街,恒山路,鱼山广场,掖县路,福山大厦,红岛路,常州街,大学广场,龙华街,齐河路,莱阳街,黄县路,张店大厦,祚山路,苏州街,华山路,伏龙街,江苏广场,龙江街,王村路,琴屿大厦,齐东路,京山广场,龙山路,牟平街,延安三路,延吉街,南京广场,东海东大厦,银川西路,海口街,山东路,绍兴广场,芝泉路,东海中街,宁夏路,香港西大厦,隆德广场,扬州街,郧阳路,太平角一街,宁国二支路,太平角二广场,天台东一路,太平角三大厦,漳州路一路,漳州街二街,宁国一支广场,太平角六街,太平角四路,天台东二街,太平角五路,宁国三大厦,澳门三路,江西支街,澳门二路,宁国四街,大尧一广场,咸阳支街,洪泽湖路,吴兴二大厦,澄海三路,天台一广场,新湛二路,三明北街,新湛支路,湛山五街,泰州三广场,湛山四大厦,闽江三路,澳门四街,南海支路,吴兴三广场,三明南路,湛山二街,二轻新村镇,江南大厦,吴兴一广场,珠海二街,嘉峪关路,高邮湖街,湛山三路,澳门六广场,泰州二路,东海一大厦,天台二路,微山湖街,洞庭湖广场,珠海支街,福州南路,澄海二街,泰州四路,香港中大厦,澳门五路,新湛三街,澳门一路,正阳关街,宁武关广场,闽江四街,新湛一路,宁国一大厦,王家麦岛,澳门七广场,泰州一路,泰州六街,大尧二路,青大一街,闽江二广场,闽江一大厦,屏东支路,湛山一街,东海西路,徐家麦岛函谷关广场,大尧三路,晓望支街,秀湛二路,逍遥三大厦,澳门九广场,泰州五街,澄海一路,澳门八街,福州北路,珠海一广场,宁国二路,临淮关大厦,燕儿岛路,紫荆关街,武胜关广场,逍遥一街,秀湛四路,居庸关街,山海关路,鄱阳湖大厦,新湛路,漳州街,仙游路,花莲街,乐清广场,巢湖街,台南路,吴兴大厦,新田路,福清广场,澄海路,莆田街,海游路,镇江街,石岛广场,宜兴大厦,三明路,仰口街,沛县路,漳浦广场,大麦岛,台湾街,天台路,金湖大厦,高雄广场,海江街,岳阳路,善化街,荣成路,澳门广场,武昌路,闽江大厦,台北路,龙岩街,咸阳广场,宁德街,龙泉路,丽水街,海川路,彰化大厦,金田路,泰州街,太湖路,江西街,泰兴广场,青大街,金门路,南通大厦,旌德路,汇泉广场,宁国路,泉州街,如东路,奉化街,鹊山广场,莲岛大厦,华严路,嘉义街,古田路,南平广场,秀湛路,长汀街,湛山路,徐州大厦,丰县广场,汕头街,新竹路,黄海街,安庆路,基隆广场,韶关路,云霄大厦,新安路,仙居街,屏东广场,晓望街,海门路,珠海街,上杭路,永嘉大厦,漳平路,盐城街,新浦路,新昌街,高田广场,市场三街,金乡东路,市场二大厦,上海支路,李村支广场,惠民南路,市场纬街,长安南路,陵县支街,冠县支广场,小港一大厦,市场一路,小港二街,清平路,广东广场,新疆路,博平街,港通路,小港沿,福建广场,高唐街,茌平路,港青街,高密路,阳谷广场,平阴路,夏津大厦,邱县路,渤海街,恩县广场,旅顺街,堂邑路,李村街,即墨路,港华大厦,港环路,馆陶街,普集路,朝阳街,甘肃广场,港夏街,港联路,陵县大厦,上海路,宝山广场,武定路,长清街,长安路,惠民街,武城广场,聊城大厦,海泊路,沧口街,宁波路,胶州广场,莱州路,招远街,冠县路,六码头,金乡广场,禹城街,临清路,东阿街,吴淞路,大港沿,辽宁路,棣纬二大厦,大港纬一路,贮水山支街,无棣纬一广场,大港纬三街,大港纬五路,大港纬四街,大港纬二路,无棣二大厦,吉林支路,大港四街,普集支路,无棣三街,黄台支广场,大港三街,无棣一路,贮水山大厦,泰山支路,大港一广场,无棣四路,大连支街,大港二路,锦州支街,德平广场,高苑大厦,长山路,乐陵街,临邑路,嫩江广场,合江路,大连街,博兴路,蒲台大厦,黄台广场,城阳街,临淄路,安邱街,临朐路,青城广场,商河路,热河大厦,济阳路,承德街,淄川广场,辽北街,阳信路,益都街,松江路,流亭大厦,吉林路,恒台街,包头路,无棣街,铁山广场,锦州街,桓台路,兴安大厦,邹平路,胶东广场,章丘路,丹东街,华阳路,青海街,泰山广场,周村大厦,四平路,台东西七街,台东东二路,台东东七广场,台东西二路,东五街,云门二路,芙蓉山村,延安二广场,云门一街,台东四路,台东一街,台东二路,杭州支广场,内蒙古路,台东七大厦,台东六路,广饶支街,台东八广场,台东三街,四平支路,郭口东街,青海支路,沈阳支大厦,菜市二路,菜市一街,北仲三路,瑞云街,滨县广场,庆祥街,万寿路,大成大厦,芙蓉路,历城广场,大名路,昌平街,平定路,长兴街,浦口广场,诸城大厦,和兴路,德盛街,宁海路,威海广场,东山路,清和街,姜沟路,雒口大厦,松山广场,长春街,昆明路,顺兴街,利津路,阳明广场,人和路,郭口大厦,营口路,昌邑街,孟庄广场,丰盛街,埕口路,丹阳街,汉口路,洮南大厦,桑梓路,沾化街,山口路,沈阳街,南口广场,振兴街,通化路,福寺大厦,峄县路,寿光广场,曹县路,昌乐街,道口路,南九水街,台湛广场,东光大厦,驼峰路,太平山,标山路,云溪广场,太清路"
			.split(",");
	private static final String[] email_suffix = "@gmail.com,@yahoo.com,@msn.com,@hotmail.com,@aol.com,@ask.com,@live.com,@qq.com,@0355.net,@163.com,@163.net,@263.net,@3721.net,@yeah.net,@googlemail.com,@126.com,@sina.com,@sohu.com,@yahoo.com.cn"
			.split(",");
	private static final String[] school = "北京大学,清华大学,复旦大学,浙江大学,武汉大学,中国人民大学,上海交通大学,南京大学,中国科学院大学,南开大学,国防科学技术大学,中国科学技术大学,北京师范大学,上海科技大学,华中科技大学,中山大学,吉林大学,四川大学,西安交通大学,哈尔滨工业大学,中南大学,中国农业大学,中国传媒大学,北京外国语大学,东南大学,北京理工大学,中央美术学院,中央戏剧学院,厦门大学,重庆大学,天津大学,华东师范大学,北京航空航天大学,电子科技大学,同济大学,中国矿业大学,北京林业大学,北京电影学院,北京体育大学,中国戏曲学院,中央音乐学院,东北大学,大连理工大学,西北工业大学,上海财经大学,解放军信息工程大学,山东大学,华中师范大学,华中农业大学,中国海洋大学,南京农业大学,北京科技大学,中国地质大学,第二军医大学,中国石油大学,第四军医大学,河海大学,北京中医药大学,中国音乐学院,北京协和医学院,华南理工大学,兰州大学,湖南大学,长安大学,西安电子科技大学,西南财经大学,中南财经政法大学,南京理工大学,对外经济贸易大学,哈尔滨工程大学,西北大学,西北农林科技大学,北京邮电大学,东北财经大学,中央财经大学,第三军医大学,中国政法大学,中国人民公安大学,上海戏剧学院,西南交通大学,东北林业大学,中国美术学院,北京舞蹈学院,中国药科大学,西南政法大学,上海中医药大学,上海音乐学院,华东理工大学,中央民族大学,东华大学,中国石油大学(北京),外交学院,南京信息工程大学,上海外国语大学,南方科技大学,西南大学,东北师范大学,北京交通大学,北京语言大学,燕山大学,华南农业大学,南京师范大学,华南师范大学,东北石油大学,南京林业大学,武汉理工大学,云南大学,暨南大学,成都理工大学,广东外语外贸大学,中国地质大学(北京),中国矿业大学(北京),首都医科大学,四川外国语大学,解放军理工大学,大连外国语大学,中国医科大学,南京艺术学院,南京中医药大学,天津中医药大学,成都中医药大学,国际关系学院,上海体育学院,中国刑事警察学院,鲁迅美术学院,武汉体育学院,中国人民武装警察部队学院,广西大学,合肥工业大学,南昌大学,南京航空航天大学,湖南师范大学,福建农林大学,辽宁大学,四川农业大学,西安理工大学,首都师范大学,南方医科大学,江南大学,西安建筑科技大学,湖南农业大学,天津师范大学,上海大学,浙江师范大学,南京邮电大学,昆明理工大学,北京化工大学,安徽农业大学,南京工业大学,西南石油大学,首都经济贸易大学,扬州大学,河北农业大学,上海海事大学,江西财经大学,西安科技大学,沈阳药科大学,延边大学,天津工业大学,甘肃农业大学,长春理工大学,南京医科大学,西安外国语大学,北京工商大学,黑龙江中医药大学,北京印刷学院,上海海洋大学,中南民族大学,中国民航大学,天津外国语大学,四川音乐学院,广州中医药大学,成都体育学院,浙江传媒学院,天津科技大学,南京审计学院,沈阳音乐学院,中央司法警官学院,中国民用航空飞行学院,郑州大学,陕西师范大学,东北农业大学,黑龙江大学,贵州大学,安徽师范大学,长沙理工大学,新疆大学,湘潭大学,福建师范大学,山东师范大学,浙江工业大学,石河子大学,华北理工大学,华北电力大学,内蒙古大学,河南大学,安徽大学,四川师范大学,辽宁工程技术大学,杭州电子科技大学,山东农业大学,西北师范大学,大连海事大学,新乡医学院,海南大学,河南理工大学,吉林农业大学,上海理工大学,哈尔滨师范大学,天津财经大学,苏州大学,福州大学,湖南科技大学,河南农业大学,北京工业大学,宁夏大学,山东科技大学,中南林业科技大学,新疆农业大学,哈尔滨商业大学,深圳大学,河北工业大学,西藏大学,武汉科技大学,东北电力大学,广西师范大学,大连海洋大学,湖北大学,内蒙古师范大学,内蒙古农业大学,山西大学,南华大学,青海大学,上海师范大学,浙江理工大学,江西农业大学,河北大学,三峡大学,汕头大学,宁波大学,安徽理工大学,太原理工大学,云南民族大学,沈阳建筑大学,成都信息工程学院,河北经贸大学,广东海洋大学,济南大学,重庆交通大学,山西财经大学,哈尔滨医科大学,山东交通学院,福建中医药大学,西安美术学院,内蒙古科技大学,哈尔滨理工大学,云南师范大学,山东财经大学,广东工业大学,西华师范大学,江苏大学,江西师范大学,中北大学,广西民族大学,贵州师范大学,石家庄铁道大学,辽宁师范大学,安徽财经大学,山东理工大学,河南财经政法大学,天津理工大学,沈阳航空航天大学,河北师范大学,青岛大学,兰州交通大学,沈阳农业大学,沈阳工业大学,浙江工商大学,中国计量学院,河北科技大学,云南农业大学,南京财经大学,辽宁科技大学,西南民族大学,西北民族大学,安庆师范学院,天津医科大学,河北医科大学,浙江海洋学院,河北工程大学,重庆邮电大学,湖北中医药大学,重庆医科大学,广西医科大学,四川美术学院,广州大学,江苏师范大学,华侨大学,曲阜师范大学,河南师范大学,南通大学,西南科技大学,广东财经大学,鲁东大学,河南工业大学,淮北师范大学,河南科技大学,华北水利水电大学,贵州财经大学,青岛农业大学,内蒙古财经大学,江西理工大学,桂林电子科技大学,安徽工业大学,北华大学,贵州民族大学,兰州理工大学,陕西科技大学,桂林理工大学,湖南工业大学,北方民族大学,安徽中医药大学,山东中医药大学,浙江财经大学,山西师范大学,山西农业大学,大连工业大学,吉林化工学院,天津商业大学,青海师范大学,合肥学院,青岛科技大学,新疆师范大学,上海对外经贸大学,武汉工程大学,大连交通大学,吉林财经大学,石家庄经济学院,青岛理工大学,武汉纺织大学,北京信息科技大学,广西艺术学院,大连医科大学,新疆医科大学,云南财经大学,福建医科大学,浙江中医药大学,延安大学,浙江万里学院,滨州医学院,北京建筑大学,湖南中医药大学,新疆财经大学,中国青年政治学院,天津体育学院,上海电力学院,辽宁中医药大学,北京第二外国语学院,华东政法大学,内蒙古工业大学,齐齐哈尔大学,华东交通大学,杭州师范大学,东华理工大学,西华大学,南昌航空大学,郑州轻工业学院,中原工学院,长江大学,浙江农林大学,聊城大学,安徽建筑大学,长春工业大学,景德镇陶瓷学院,吉林师范大学,太原科技大学,佳木斯大学,淮海工学院,河南中医学院,大连大学,安徽医科大学,烟台大学,西安石油大学,山西医科大学,宁夏医科大学,青海民族大学,黑龙江科技大学,大连民族学院,江西中医药大学,内蒙古医科大学,齐鲁工业大学,广西师范学院,温州医科大学,湖北工业大学,江苏科技大学,黑龙江八一农垦大学,安徽工程大学,广东医学院,广东药学院,四川理工学院,遵义医学院,辽宁石油化工大学,长春师范大学,广西科技大学,潍坊医学院,邵阳学院,黄山学院,湖南理工学院,广州美术学院,西北政法大学,山东建筑大学,西安工业大学,长春中医药大学,沈阳理工大学,贵阳中医学院,北京联合大学,西南林业大学,泰山医学院,甘肃政法学院,浙江科技学院,湖北美术学院,广州体育学院,重庆工商大学,昆明医科大学,北方工业大学,贵阳医学院,武汉轻工大学,上海第二工业大学,山东艺术学院,沈阳体育学院,徐州医学院,天津农学院,忻州师范学院,华北科技学院,西安体育学院,云南艺术学院,塔里木大学,盐城师范学院,中华女子学院,吉林艺术学院,天津音乐学院,武汉音乐学院,西安工程大学,广西中医药大学,南京体育学院,星海音乐学院,内蒙古民族大学,集美大学,信阳师范学院,海南师范大学,沈阳师范大学,辽宁工业大学,五邑大学,上海工程技术大学,常州大学,福建工程学院,河南科技学院,郑州航空工业管理学院,吉林工程技术师范学院,吉首大学,绍兴文理学院,南京工程学院,长春工程学院,吉林建筑大学,湖北工程学院,湖州师范学院,湖北师范学院,成都学院,长春大学,沈阳化工大学,甘肃中医学院,江西科技师范大学,兰州商学院,湖南商学院,阜阳师范学院,湖北民族学院,安阳师范学院,佛山科学技术学院,淮阴师范学院,广州医科大学,西安财经学院,湖北汽车工业学院,江汉大学,济宁医学院,重庆师范大学,重庆理工大学,西藏民族学院,北京服装学院,北京农学院,云南中医学院,湖北经济学院,湖南文理学院,黄冈师范学院,泸州医学院,天津城建大学,防灾科技学院,湖北科技学院,山西大同大学,湖北医药学院,湖北文理学院,天水师范学院,白城师范学院,首都体育学院,山东体育学院,赣南师范学院,苏州科技学院,北京物资学院,上海政法学院,北京石油化工学院,盐城工学院,淮阴工学院,通化师范学院,河北建筑工程学院,山东工艺美术学院,天津美术学院,上海海关学院,江苏警官学院,中国劳动关系学院,陕西理工学院,北京电子科技学院,长治医学院,太原师范学院,吉林体育学院,西安音乐学院,河北体育学院,西藏藏医学院,韶关学院,湛江师范学院,韩山师范学院,井冈山大学,广东技术师范学院,东莞理工学院,温州大学,嘉兴学院,肇庆学院,泉州师范学院,仲恺农业工程学院,天津职业技术师范大学,宜春学院,上饶师范学院,南昌工程学院,海南医学院,重庆科技学院,江苏理工学院,上海金融学院,安徽科技学院,绵阳师范学院,蚌埠医学院,皖西学院,常熟理工学院,铜陵学院,上海应用技术学院,商丘师范学院,黑龙江工程学院,广西财经学院,湖南工程学院,惠州学院,洛阳师范学院,南阳师范学院,九江学院,常州工学院,台州学院,广东金融学院,衡阳师范学院,山东工商学院,上海电机学院,嘉应学院,河西学院,金陵科技学院,河北金融学院,牡丹江师范学院,徐州工程学院,潍坊学院,滁州学院,湖南城市学院,湖南人文科技学院,南京晓庄学院,河南工程学院,湖北理工学院,吉林农业科技学院,广东石油化工学院,湘南学院,西昌学院,临沂大学,桂林医学院,长江师范学院,黄淮学院,赣南医学院,吉林工商学院,晋中学院,梧州学院,广东警官学院,西安邮电大学,上海立信会计学院,川北医学院,重庆三峡学院,大理学院,陕西中医学院,牡丹江医学院,廊坊师范学院,宁波工程学院,沈阳医学院,长沙学院,山东政法学院,石家庄学院,伊犁师范学院,曲靖师范学院,吉林医药学院,齐齐哈尔医学院,甘肃民族师范学院,湖北警官学院,云南警官学院,喀什师范学院,重庆文理学院,上海商学院,绥化学院,承德医学院,山西中医学院,黑河学院,大庆师范学院,渭南师范学院,哈尔滨体育学院,福建警察学院,新疆艺术学院,河北北方学院,哈尔滨学院,浙江警察学院,闽南师范大学,渤海大学,闽江学院,厦门理工学院,集宁师范学院,三明学院,莆田学院,沈阳大学,沈阳工程学院,皖南医学院,攀枝花学院,平顶山学院,宝鸡文理学院,淮南师范学院,乐山师范学院,丽水学院,赤峰学院,怀化学院,河南城建学院,泰山学院,辽宁科技学院,龙岩学院,宿州学院,河北科技师范学院,湖南科技学院,河南牧业经济学院,合肥师范学院,安阳工学院,内江师范学院,南阳理工学院,洛阳理工学院,巢湖学院,宁夏师范学院,辽东学院,许昌学院,陇东学院,武夷学院,山东青年政治学院,周口师范学院,江苏第二师范学院,蚌埠学院,辽宁医学院,滨州学院,德州学院,湖北第二师范学院,运城学院,福建江夏学院,琼州学院,黔南民族师范学院,咸阳师范学院,呼伦贝尔学院,新乡学院,贵阳学院,河套学院,河池学院,山东管理学院,山东女子学院,菏泽学院,荆楚理工学院,昆明学院,毕节学院,唐山师范学院,湖南财政经济学院,楚雄师范学院,西安医学院,右江民族医学院,北华航天工业学院,西安文理学院,鞍山师范学院,广东第二师范学院,安康学院,红河学院,济宁学院,信阳农林学院,池州学院,贺州学院,兰州城市学院,铜仁学院,吉林警察学院,重庆警察学院,湖南工学院,百色学院,兰州文理学院,钦州学院,成都医学院,桂林航天工业学院,宁德师范学院,太原工业学院,邯郸学院,首钢工学院,枣庄学院,安顺学院,榆林学院,兴义民族师范学院,邢台学院,武汉商学院,陕西学前师范学院,呼和浩特民族学院,北京警察学院,河南警察学院,湖南警察学院,江西警察学院,铁道警察学院,成都工业学院,玉林师范学院,浙江水利水电学院,昌吉学院,玉溪师范学院,哈尔滨金融学院,唐山学院,宜宾学院,西安航空学院,河北民族师范学院,贵州理工学院,湖南第一师范学院,长治学院,湖南女子学院,重庆第二师范学院,营口理工学院,河北中医学院,张家口学院,遵义师范学院,广西民族师范学院,凯里学院,萍乡学院,泰州学院,文山学院,南昌师范学院,衡水学院,四川文理学院,成都师范学院,山东农业工程学院,保山学院,兰州工业学院,昭通学院,山东警察学院,山西传媒学院,四川警察学院,新疆警察学院,衢州学院,贵州师范学院,新疆工程学院,吕梁学院,黑龙江工业学院,太原学院,沧州师范学院,广州航海学院,保定学院,新余学院,齐鲁师范学院,郑州师范学院,商洛学院,长沙师范学院,景德镇学院,普洱学院,四川旅游学院,四川民族学院,六盘水师范学院,公安海警学院,南京森林警察学院,浙江外国语学院"
			.split(",");

	public static int getNum(int start, int end) {
		return (int) (Math.random() * (end - start + 1) + start);
	}
	/**
	 * 返回Email
	 * 
	 * @param lMin
	 *            最小长度
	 * @param lMax
	 *            最大长度
	 * @return
	 */
	public static String getEmail(int lMin, int lMax) {
		int length = getNum(lMin, lMax);
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i < length; i++) {
			int number = (int) (Math.random() * base.length());
			sb.append(base.charAt(number));
		}
		sb.append(email_suffix[(int) (Math.random() * email_suffix.length)]);
		return sb.toString();
	}

	public static String getSchool() {
		return school[(int) (Math.random() * school.length - 1)];
	}
	/**
	 * 返回手机号码
	 */
	private static String[] telFirst = "134,135,136,137,138,139,150,151,152,157,158,159,130,131,132,155,156,133,153"
			.split(",");
	public static String getTel() {
		int index = getNum(0, telFirst.length - 1);
		String first = telFirst[index];
		String second = String.valueOf(getNum(1, 888) + 10000).substring(1);
		String thrid = String.valueOf(getNum(1, 9100) + 10000).substring(1);
		return first + second + thrid;
	}

	/**
	 * 返回中文姓名
	 */
	private static String name_sex = "";

	public static String getChineseName() {
		int index = getNum(0, firstName.length() - 1);
		String first = firstName.substring(index, index + 1);
		int sex = getNum(0, 1);
		String str = boy;
		int length = boy.length();
		if (sex == 0) {
			str = girl;
			length = girl.length();
			name_sex = "女";
		} else {
			name_sex = "男";
		}
		index = getNum(0, length - 1);
		String second = str.substring(index, index + 1);
		int hasThird = getNum(0, 1);
		String third = "";
		if (hasThird == 1) {
			index = getNum(0, length - 1);
			third = str.substring(index, index + 1);
		}
		return first + second + third;
	}

	public static String getSex() {
		return name_sex;
	}

	/**
	 * 返回地址
	 * 
	 * @return
	 */
	public static String getRoad() {
		int index = getNum(0, road.length - 1);
		String first = road[index];
		String second = String.valueOf(getNum(11, 150)) + "号";
		String third = "-" + getNum(1, 20) + "-" + getNum(1, 10);
		return first + second + third;
	}

	public static String getAddress() {
		return cityList.get((int) (Math.random() * cityList.size() - 1))
				+ getRoad();
	}

	static List<String> cityList = new ArrayList<>();

	public static void initCity(String path) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(
				new FileInputStream(new File(path))));
		String buff = "";
		while ((buff = br.readLine()) != null) {
			if (buff.trim().length() > 0 && buff.contains("：")) {
				String provence = buff.split("：")[0];
				String[] citys = buff.split("：")[1].split("\\s+");
				for (String city : citys) {
					cityList.add(provence + city);
				}
			}
		}
	}
	public static String getInfo() {
		String infoName = genData.getChineseName();
		String infoSex = genData.getSex();
		String infoEmail = genData.getEmail(6, 9);
		String infoSchool = genData.getSchool();
		String infoAddress = genData.getAddress();
		String infoTel = genData.getTel();
		String result = ":==============>" + infoName + "|---|" + infoSex
				+ "|---|" + infoEmail + "|---|" + infoSchool + "|---|"
				+ infoTel + "|---|" + infoAddress + "|---|";
		return result;
	}
/**
 * 生成数据封装成json
 * 其中每个get方法会有对应的数据生成方法
 * @return
 */
	public JSONObject getJson() {
		Map<String,String> map = new HashMap<>();
		map.put("name", getChineseName());
		map.put("sex", getSex());
		map.put("email", getEmail(6, 9));
		map.put("school", getSchool());
		map.put("address", getAddress());
		map.put("Tel", getTel());
		JSONObject json = JSONObject.fromObject(map);
		return json;
	}
    public String getTime(long begin,long end){
        String result =(end - begin)/1000+"秒; "+(end - begin)/1000/60+"分; "+(end - begin)/1000/60/60+"时;";
        return result;
}

}








